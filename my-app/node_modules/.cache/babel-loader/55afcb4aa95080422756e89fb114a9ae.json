{"ast":null,"code":"var _jsxFileName = \"/Users/carlos/Desktop/React/ToDoApp/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useContext } from 'react';\nimport ToDoItem from './components/toDoItem';\nimport ToDoInput from './components/ToDoInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tabs, setTabs] = useState([{\n    isActive: false,\n    name: 'Complete'\n  }, {\n    isActive: true,\n    name: 'All'\n  }, {\n    isActive: false,\n    name: 'Incomplete'\n  }]);\n  const [toDoList, setToDoList] = useState([{\n    state: 2,\n    value: 'Wake Up'\n  }]);\n  const [temporalToDoList, setTemporalToDoList] = useState(toDoList);\n\n  const onSubmit = toDoAdded => {\n    if (toDoAdded.trim() === '') return;\n    const value = toDoAdded;\n    setToDoList([...toDoList, {\n      state: 0,\n      value: value\n    }]);\n    setTemporalToDoList([...temporalToDoList, {\n      state: 0,\n      value: value\n    }]);\n  };\n\n  const onSelectTab = event => {\n    const defaultTabs = [{\n      isActive: false,\n      name: 'Complete',\n      state: 2\n    }, {\n      isActive: false,\n      name: 'All'\n    }, {\n      isActive: false,\n      name: 'Incomplete',\n      state: 1\n    }];\n\n    const tabSelected = element => element.name === event.target.innerText;\n\n    const indexTabSelected = defaultTabs.findIndex(defaultTabs.nane = tabSelected);\n    defaultTabs[indexTabSelected].isActive = true;\n    setTabs(defaultTabs);\n    refreshItemList(defaultTabs[indexTabSelected].state);\n  };\n\n  const refreshItemList = state => {\n    if (state) {\n      setTemporalToDoList(() => toDoList.filter(item => item.state == state));\n    } else {\n      setTemporalToDoList(toDoList);\n    }\n  };\n\n  const changeToDoItemState = newList => {\n    setToDoList(newList);\n    setTemporalToDoList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"To do list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), tabs[1].isActive ? /*#__PURE__*/_jsxDEV(ToDoInput, {\n          getToDoList: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 32\n        }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs-container\",\n          children: tabs.map(tabsItem => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: tabsItem.isActive ? 'active-tab' : 'desactive-tab',\n            onClick: onSelectTab,\n            children: tabsItem.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToDoItem, {\n          toDoList: temporalToDoList,\n          onChangeItemState: changeToDoItemState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Oo/lAVz+5CBGhz4sEtLh/e6yz+k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/carlos/Desktop/React/ToDoApp/my-app/src/App.js"],"names":["React","useState","useContext","ToDoItem","ToDoInput","App","tabs","setTabs","isActive","name","toDoList","setToDoList","state","value","temporalToDoList","setTemporalToDoList","onSubmit","toDoAdded","trim","onSelectTab","event","defaultTabs","tabSelected","element","target","innerText","indexTabSelected","findIndex","nane","refreshItemList","filter","item","changeToDoItemState","newList","map","tabsItem"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useContext } from 'react';\nimport ToDoItem from './components/toDoItem';\nimport ToDoInput from './components/ToDoInput';\n\n\nfunction App() {\n  const [tabs, setTabs] = useState([\n    {isActive:false, name:'Complete'},\n    {isActive:true, name:'All'},\n    {isActive:false, name:'Incomplete'}\n  ])\n  const [toDoList, setToDoList] = useState([\n    {state:2, value:'Wake Up'}\n  ])\n\n  const [temporalToDoList, setTemporalToDoList] = useState(toDoList);\n\n  const onSubmit = (toDoAdded) => {\n    if(toDoAdded.trim() === '') return;\n    const value = toDoAdded;\n    setToDoList([\n      ...toDoList,\n      {state:0, value:value}\n    ]);\n    setTemporalToDoList([\n      ...temporalToDoList,\n      {state:0, value:value}\n    ]);\n  }\n\n  const onSelectTab = (event) => {\n    const defaultTabs = [\n    {isActive:false, name:'Complete',state:2},\n    {isActive:false, name:'All'},\n    {isActive:false, name:'Incomplete', state:1}\n    ];\n    const tabSelected = (element) => element.name === event.target.innerText;\n    const indexTabSelected = defaultTabs.findIndex(defaultTabs.nane = tabSelected);\n    defaultTabs[indexTabSelected].isActive = true;\n    setTabs(defaultTabs);\n    refreshItemList(defaultTabs[indexTabSelected].state)\n  }\n\n  const refreshItemList = (state) => {\n    if(state){\n      setTemporalToDoList(() => \n        toDoList.filter(item => item.state == state)\n      )\n    }else{\n      setTemporalToDoList(toDoList);\n    }\n  }\n\n  const changeToDoItemState = (newList) =>{\n    setToDoList(newList);\n    setTemporalToDoList(newList);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div className=\"card\">\n        <div className=\"title\">\n                To do list\n            </div>\n          {\n            tabs[1].isActive ? <ToDoInput getToDoList={onSubmit}/> : ''\n          }\n          <div className=\"tabs-container\">\n            {tabs.map(tabsItem =>\n              <div className={tabsItem.isActive?'active-tab':'desactive-tab'} onClick={onSelectTab}>\n                {tabsItem.name}\n              </div>\n            )}\n          </div>\n          <ToDoItem toDoList={temporalToDoList} onChangeItemState={changeToDoItemState}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}